name: Build and Package

on:
  push:
    branches: ["main"]
    tags: ["v*.*.*"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

env:
  QT_VERSION: "6.9.2"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        include:
          - os: ubuntu-latest
            artifact: linux-build
            host: linux
            target: desktop
            arch: linux_gcc_64
            modules: "qt3d.debug_information qt3d qt5compat.debug_information qt5compat qtcharts.debug_information qtcharts qtconnectivity.debug_information qtconnectivity qtdatavis3d.debug_information qtdatavis3d qtgraphs.debug_information qtgraphs qtgrpc.debug_information qtgrpc qthttpserver.debug_information qthttpserver qtimageformats.debug_information qtimageformats qtlanguageserver qtlocation.debug_information qtlocation qtlottie.debug_information qtlottie qtmultimedia.debug_information qtmultimedia qtnetworkauth.debug_information qtnetworkauth qtpositioning.debug_information qtpositioning qtquick3d.debug_information qtquick3d qtquick3dphysics.debug_information qtquick3dphysics qtquickeffectmaker.debug_information qtquickeffectmaker qtquicktimeline.debug_information qtquicktimeline qtremoteobjects.debug_information qtremoteobjects qtscxml.debug_information qtscxml qtsensors.debug_information qtsensors qtserialbus.debug_information qtserialbus qtserialport.debug_information qtserialport qtshadertools.debug_information qtshadertools qtspeech.debug_information qtspeech qtvirtualkeyboard.debug_information qtvirtualkeyboard qtwaylandcompositor qtwebchannel.debug_information qtwebchannel qtwebsockets.debug_information qtwebsockets qtwebview.debug_information qtwebview debug_info"
            tools: 'tools_ifw'
          - os: windows-latest
            artifact: 'windows-build'
            host: 'windows'
            target: 'desktop'
            arch: 'win64_msvc2022_64'
            modules: 'qt3d.debug_information qt3d qt5compat.debug_information qt5compat qtactiveqt.debug_information qtactiveqt qtcharts.debug_information qtcharts qtconnectivity.debug_information qtconnectivity qtdatavis3d.debug_information qtdatavis3d qtgraphs.debug_information qtgraphs qtgrpc.debug_information qtgrpc qthttpserver.debug_information qthttpserver qtimageformats.debug_information qtimageformats qtlanguageserver qtlocation.debug_information qtlocation qtlottie.debug_information qtlottie qtmultimedia.debug_information qtmultimedia qtnetworkauth.debug_information qtnetworkauth qtpositioning.debug_information qtpositioning qtquick3d.debug_information qtquick3d qtquick3dphysics.debug_information qtquick3dphysics qtquickeffectmaker.debug_information qtquickeffectmaker qtquicktimeline.debug_information qtquicktimeline qtremoteobjects.debug_information qtremoteobjects qtscxml.debug_information qtscxml qtsensors.debug_information qtsensors qtserialbus.debug_information qtserialbus qtserialport.debug_information qtserialport qtshadertools.debug_information qtshadertools qtspeech.debug_information qtspeech qtvirtualkeyboard.debug_information qtvirtualkeyboard qtwebchannel.debug_information qtwebchannel qtwebsockets.debug_information qtwebsockets qtwebview.debug_information qtwebview debug_info'
            tools: 'tools_ifw'
          - os: macos-latest
            artifact: 'mac-build'
            host: 'mac'
            target: 'desktop'
            arch: 'clang_64'
            modules: 'qt3d qt3d.debug_information qt5compat qt5compat.debug_information qtcharts qtcharts.debug_information qtconnectivity qtconnectivity.debug_information qtdatavis3d qtdatavis3d.debug_information qtgraphs qtgraphs.debug_information qtgrpc qtgrpc.debug_information qthttpserver qthttpserver.debug_information qtimageformats qtimageformats.debug_information qtlanguageserver qtlocation qtlocation.debug_information qtlottie qtlottie.debug_information qtmultimedia qtmultimedia.debug_information qtnetworkauth qtnetworkauth.debug_information qtpositioning qtpositioning.debug_information qtquick3d qtquick3d.debug_information qtquick3dphysics qtquick3dphysics.debug_information qtquickeffectmaker qtquickeffectmaker.debug_information qtquicktimeline qtquicktimeline.debug_information qtremoteobjects qtremoteobjects.debug_information qtscxml qtscxml.debug_information qtsensors qtsensors.debug_information qtserialbus qtserialbus.debug_information qtserialport qtserialport.debug_information qtshadertools qtshadertools.debug_information qtspeech qtspeech.debug_information qtvirtualkeyboard qtvirtualkeyboard.debug_information qtwebchannel qtwebchannel.debug_information qtwebsockets qtwebsockets.debug_information qtwebview qtwebview.debug_information debug_info'
            tools: 'tools_ifw'
    
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - uses: TheMrMilchmann/setup-msvc-dev@v4
        if: startsWith(matrix.os, 'windows-')
        with:
          arch: x64

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: "${{ env.QT_VERSION }}"
          target: "desktop"
          cache: "true"
          cache-key-prefix: "install-qt-action"
          install-deps: "true"
          dir: "${{ github.workspace }}"
          host: "${{ matrix.host }}"
          arch: "${{ matrix.arch }}"
          modules: "${{ matrix.modules }}"
          tools: "${{ matrix.tools }}"

      - name: Install CMake 4+
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: "4.1.x"

      - name: Dump Versions
        run: |
          cmake --version
          ninja --version
          ninja --version

      - name: Get version from Git tag
        id: version
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            # Extract version from tag (remove 'v' prefix if present)
            VERSION=${GITHUB_REF#refs/tags/}
            VERSION=${VERSION#v}
            echo "Using tag version: $VERSION"
          else
            # Fallback for non-tag builds (development builds)
            VERSION=0.0.${{ github.run_number }}
            echo "Using fallback version: $VERSION"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
        shell: bash

      - name: Configure CMake
        run: cmake -B build -S . -DGAV_VERSION=${{ steps.version.outputs.version }} -DCMAKE_TOOLCHAIN_FILE=${{env.QT_ROOT_DIR}}/lib/cmake/Qt6/qt.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -GNinja

      - name: Build
        run: |
          cd build
          ninja

      - name: Package
        run: |
          cd build
          ninja package

      - name: Upload all build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: build/packages/*

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'
    steps:
      - name: Download Linux build artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-build
          path: ./linux-packages
      
      - name: Download Windows build artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-build
          path: ./windows-packages

      - name: Download Mac build artifact
        uses: actions/download-artifact@v4
        with:
          name: mac-build
          path: ./mac-packages

      - name: List downloaded files
        run: |
          echo "Linux packages:"
          ls -la ./linux-packages/
          echo "Windows packages:"
          ls -la ./windows-packages/
          echo "Mac packages:"
          ls -la ./mac-packages/

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            ./linux-packages/*
            ./windows-packages/*
            ./mac-packages/*
